{"version":3,"file":"mobx-model-ui.js","sources":["../src/config.ts","../src/cache.ts","../src/utils.ts","../src/inputs/handlers/syncURL.ts","../src/inputs/handlers/syncLocalStorage.ts","../src/inputs/handlers/syncCookie.ts","../src/inputs/Input.ts","../src/inputs/ObjectInput.ts","../src/inputs/auto-reset/autoResetId.ts","../src/types/type.ts","../src/types/string.ts","../src/types/number.ts","../src/types/boolean.ts","../src/types/date.ts","../src/types/datetime.ts","../src/types/array.ts","../src/types/order-by.ts","../src/queries/query.ts","../src/queries/query-page.ts","../src/queries/query-cache-sync.ts","../src/queries/query-stream.ts","../src/queries/query-raw.ts","../src/queries/query-raw-page.ts","../src/queries/query-distinct.ts","../src/repository.ts","../src/model/models.ts","../src/model/model.ts","../src/model/model-decorator.ts","../src/model/model-descriptor.ts","../src/fields/field.ts","../src/fields/foreign.ts","../src/fields/one.ts","../src/fields/many.ts","../src/fields/id.ts","../src/filters/Filter.ts","../src/filters/SingleFilter.ts","../src/filters/ComboFilter.ts","../src/adapters/adapter.ts","../src/adapters/read-only.ts","../src/adapters/local.ts","../src/adapters/constant.ts","../src/forms/Form.ts","../src/forms/ObjectForm.ts","../src/forms/SaveObjectForm.ts","../src/forms/ActionObjectForm.ts","../src/forms/DeleteObjectForm.ts"],"sourcesContent":["// TODO: remove dependency of lodash \nimport _ from 'lodash'\n\n// Global config of Mobx-ORM\nexport const config = {\n    DEFAULT_PAGE_SIZE   : 50,\n    AUTO_UPDATE_DELAY   : 100,  // ms\n    FORM_NON_FIELD_ERRORS_KEY : 'non_field_errors',\n    FORM_UNKNOWN_ERROR_MESSAGE: 'Unknown errors. Please contact support.',\n    // NOTE: React router manage URL by own way. \n    // change UPDATE_SEARCH_PARAMS and WATCTH_URL_CHANGES in this case\n    UPDATE_SEARCH_PARAMS: (search_params: URLSearchParams) => {\n        window.history.pushState(null, '', `${window.location.pathname}?${search_params.toString()}`)\n\n    },\n    WATCTH_URL_CHANGES: (callback: any) => {\n        window.addEventListener('popstate', callback)\n        return () => { window.removeEventListener('popstate', callback) }\n    },\n\n    DEBOUNCE: (func: Function, debounce: number) => {\n        return _.debounce(func, debounce)\n    },\n\n    COOKIE_DOMAIN: 'localhost' // Change this to your domain if needed.\n}\n","import { action, makeObservable, observable } from 'mobx'\nimport { Model } from './model'\nimport { ID } from './types'\n\n/**\n * Cache for model objects.\n */\nexport class Cache<M extends Model> {\n    @observable readonly store = new Map<ID, M>()\n\n    constructor() {\n        makeObservable(this)\n    }\n\n    /**\n     * Get object by ID \n     */\n    get(ID: ID): M|undefined {\n        return this.store.get(ID)\n    }\n\n    /**\n     * Inject object to the cache \n     */\n    @action inject(obj: M) {\n        if (obj.ID === undefined || obj.ID === null || obj.ID === '')\n            throw new Error(`Object should have id!`)\n\n        const exist_obj = this.store.get(obj.ID)\n        if (exist_obj && exist_obj !== obj)\n            throw new Error(`Object with ID ${obj.ID} already exist in the cache.`)\n\n        this.store.set(obj.ID, obj)\n    }\n\n    /**\n     * Eject object from the cache \n     */\n    @action eject(obj: M) {\n        if (obj.ID)\n            this.store.delete(obj.ID)\n    }\n\n    /**\n     * Clear the cache\n     */\n    @action clear() {\n        for (let obj of this.store.values()) obj.destroy()\n        this.store.clear()\n    }\n}\n","import { autorun } from 'mobx'\nimport { Model, ModelDescriptor } from './model'\n\n\nexport function waitIsTrue(obj: any, field: string) : Promise<Boolean> {\n    return new Promise((resolve, reject) => { \n        autorun((reaction) => {\n            if (obj[field]) {\n                reaction.dispose()\n                resolve(true) \n            }\n        })\n    })\n}\n\nexport function waitIsFalse(obj: any, field: string) : Promise<Boolean> {\n    return new Promise((resolve, reject) => { \n        autorun((reaction) => {\n            if (!obj[field]) {\n                reaction.dispose()\n                resolve(true) \n            }\n        })\n    })\n}\n\nexport function timeout(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n","import { reaction } from 'mobx'\nimport { config } from '../../config'\nimport { Input } from '../Input'\n\n\nexport const syncURLHandler = (paramName: string, input: Input<any>) => {\n    const searchParams = new URLSearchParams(window.location.search)\n    // init from URL Search Params\n    if (searchParams.has(paramName)) {\n        input.setFromString(searchParams.get(paramName))\n    }\n    // watch for URL changes and update Input\n    function updataInputFromURL() {\n        const searchParams = new URLSearchParams(window.location.search)\n        if (searchParams.has(paramName)) {\n            const raw_value = searchParams.get(paramName)\n            const exist_raw_value = input.toString() \n            if (raw_value !== exist_raw_value) {\n                input.setFromString(raw_value)\n            }\n        }\n        else if (input.value !== undefined)\n            input.set(undefined)\n    }\n    input.__disposers.push(config.WATCTH_URL_CHANGES(updataInputFromURL.bind(input)))\n    // watch for Input changes and update URL\n    input.__disposers.push(reaction(\n        () => input.toString(),  // I cannot use this.value because it can be a Map\n        (value) => {\n            const searchParams = new URLSearchParams(window.location.search)\n            if (value === '' || value === undefined)\n                searchParams.delete(paramName)\n            else if (searchParams.get(paramName) !== value)\n                searchParams.set(paramName, value)\n\n            config.UPDATE_SEARCH_PARAMS(searchParams)\n        },\n        { fireImmediately: true },\n    ))\n}\n","import { reaction } from 'mobx'\nimport { Input } from '../Input'\n\n\nexport const syncLocalStorageHandler = (paramName: string, input: Input<any>) => {\n    // init value from localStorage\n    if (paramName in localStorage) {\n        let raw_value = localStorage.getItem(paramName)\n        const exist_raw_value = input.toString() \n        if (exist_raw_value !== raw_value)\n            input.setFromString(raw_value)\n    }\n    // watch for changes and save to localStorage\n    input.__disposers.push(reaction(\n        () => input.value,\n        (value, previousValue) => {\n            // WARNING: input should return 'null' if value is null\n            // because localStorage cannot store null\n            if (value !== undefined)\n                localStorage.setItem(paramName, input.toString())\n            else\n                localStorage.removeItem(paramName)\n        },\n    ))\n}\n","import { reaction } from 'mobx'\nimport { Input } from '../Input'\nimport { config } from '../../config'\n\n\nexport const syncCookieHandler = (paramName: string, input: Input<any>) => {\n    const cookie = document.cookie.split(';').find(row => row.trim().startsWith(`${paramName}=`)) \n    if (cookie) {\n        input.setFromString(cookie.split('=')[1])\n    }\n    // watch for Input changes and update cookie\n    input.__disposers.push(reaction(\n        () => input.toString(),\n        (value) => {\n            if (value === undefined)\n                document.cookie = `${paramName}=; path=/; domain=${config.COOKIE_DOMAIN}`\n            else\n                document.cookie = `${paramName}=${value}; path=/; domain=${config.COOKIE_DOMAIN}`\n        },\n        { fireImmediately: true },\n    ))\n}\n","import { action, makeObservable, observable, runInAction } from 'mobx'\nimport { syncCookieHandler, syncLocalStorageHandler, syncURLHandler } from './handlers'\nimport { config } from '../config'\nimport { TypeDescriptor } from '../types'\nimport { Destroyable } from '../object'\n\n\nexport interface InputConstructorArgs<T> {\n    value               ?: T\n    disabled            ?: boolean\n    debounce            ?: number\n    syncURL             ?: string\n    syncLocalStorage    ?: string\n    syncCookie          ?: string\n}\n\nexport class Input<T> implements Destroyable {\n    type: TypeDescriptor<T>\n    @observable          value               : T\n    @observable          isDisabled          : boolean\n    @observable          isDebouncing        : boolean          //  \n    @observable          isNeedToUpdate      : boolean          //  \n    @observable          errors              : string[] = []    // validations or backend errors put here\n                readonly debounce            : number\n                readonly syncURL            ?: string\n                readonly syncLocalStorage   ?: string\n                readonly syncCookie         ?: string\n                         __disposers = [] \n    \n    // TODO: fix any, it should be InputConstructorArgs<T> but it is not working\n    // it's look like a bug in the TypeScript\n    constructor (type: TypeDescriptor<T>, args?: InputConstructorArgs<any>) {\n        // init all observables before use it in reaction\n        this.type               = type\n        this.value              = args && args.value !== undefined ? args.value : type.default()\n        this.isDisabled         = !!args?.disabled\n        this.isDebouncing       = false \n        this.isNeedToUpdate     = false \n        this.debounce           = args?.debounce\n        this.syncURL            = args?.syncURL\n        this.syncLocalStorage   = args?.syncLocalStorage\n        this.syncCookie         = args?.syncCookie\n        makeObservable(this)\n        if (this.debounce) {\n            this.stopDebouncing = config.DEBOUNCE(\n                () => runInAction(() => {\n                    this.validate()\n                    this.isDebouncing = false\n                }),\n                this.debounce\n            )\n        }\n        // the order is important, because syncURL has more priority under syncLocalStorage\n        // i.e. init from syncURL can overwrite value from syncLocalStorage\n        this.syncLocalStorage   && syncLocalStorageHandler(this.syncLocalStorage, this)\n        this.syncCookie         && syncCookieHandler(this.syncCookie, this)\n        this.syncURL            && syncURLHandler(this.syncURL, this)\n    }\n\n    destroy () {\n        this.__disposers.forEach(disposer => disposer())\n    }\n\n    private stopDebouncing: () => void\n\n    @action\n    public set (value: T) {\n        this.value = value\n        this.isNeedToUpdate = false\n        if (this.debounce) {\n            this.isDebouncing = true \n            this.stopDebouncing()       // will stop debouncing after debounce\n        }\n        else {\n            this.validate()\n        }\n    }\n\n    get isReady () {\n        if (this.isDisabled)\n            return true\n        return !(this.errors.length\n            ||  this.isDebouncing\n            ||  this.isNeedToUpdate\n            ||  this.type.required && (this.value === undefined || this.value === '' || (Array.isArray(this.value) && !this.value.length))\n        )\n    }\n\n    @action validate () {\n        this.errors = []\n        try {\n            this.type.validate(this.value)\n            this.errors = []\n        } catch (e) {\n            this.errors = [e.message]\n        }\n    }\n\n    setFromString(value: string) {\n        this.set(this.type.fromString(value))\n    }\n    toString() {\n        return this.type.toString(this.value)\n    }\n}\n","import { reaction, runInAction } from 'mobx'\nimport { Query } from '../queries'\nimport { Model } from '../model'\nimport { Input, InputConstructorArgs } from './Input'\nimport { ID, STRING, TypeDescriptor } from '../types'\n\n\nexport interface ObjectInputConstructorArgs<M extends Model> extends InputConstructorArgs<ID> {\n    options    : Query<M>\n    autoReset ?: (input: ObjectInput<M>) => void\n}\n\nexport class ObjectInput<M extends Model> extends Input<ID> {\n    readonly options: Query<M>\n\n    constructor (type: TypeDescriptor<ID>, args?: ObjectInputConstructorArgs<M>) {\n        super(type, args)\n        this.options = args.options\n        if (this.options) {\n            this.__disposers.push(reaction(\n                () => this.options.isReady,\n                (isReady, previousValue) => {\n                    if(isReady && !previousValue) {\n                        runInAction(() => this.isNeedToUpdate = true)\n                        args?.autoReset && args.autoReset(this)\n                    }\n                }\n            ))\n        }\n        else if (args?.autoReset) {\n            console.warn('autoReset function should be used only with options')\n        }\n    }\n\n    get obj(): M | undefined {\n        if (!this.options) {\n            console.warn('ObjectInput cannot return an object if options are not provided')\n            return undefined\n        }\n        return this.options.repository.modelDescriptor.cache.get(this.value)\n    }\n\n    get isReady () {\n        // options should be checked first\n        // because without options it doesn't make sense to check value \n        return this.options ? this.options.isReady && super.isReady : super.isReady\n    }\n\n    destroy () {\n        super.destroy()\n        this.options?.destroy()\n    }\n}\n","import { ObjectInput } from '../ObjectInput'\n\n\nexport function autoResetId(input: ObjectInput<any>) {\n    // if value still in options, do nothing\n    for (const item of input.options.items) {\n        if (item.ID === input.value) {\n            // have to set value to trigger reaction\n            input.set(input.value)\n            return\n        }\n    }\n    // otherwise set first available id or undefined\n    input.set(input.options.items[0]?.ID)\n}\n","export interface TypeDescriptorProps {\n    required?: boolean\n    null    ?: boolean\n}\n\nexport abstract class TypeDescriptor<T> {\n    required: boolean  // allow undefined value\n    null    : boolean  // allow null value\n    \n    constructor(props?: TypeDescriptorProps) {\n        this.null     = props?.null     ?? false\n        this.required = props?.required ?? false \n    }\n    /**\n     * Convert value to the string\n     */ \n    abstract toString(value: T): string\n    /**\n     * Convert string to the value\n     */ \n    abstract fromString(value: string): T\n    /**\n     * Check if the value is valid\n     * If not, throw an error\n     */ \n    validate(value: T): void {\n        if ((value === undefined && this.required) \n        ||  (value === null      && !this.null   ))\n            throw new Error('Field is required')\n    }\n\n    abstract default(): T\n}\n","import { TypeDescriptor, TypeDescriptorProps } from './type'\n\n\nexport interface StringDescriptorProps extends TypeDescriptorProps {\n    minLength?: number\n    maxLength?: number\n}\n\n\nexport class StringDescriptor extends TypeDescriptor<string> {\n    minLength: number\n    maxLength: number\n    constructor(props?: StringDescriptorProps) {\n        super(props)\n        this.minLength = props?.minLength ?? 0\n        this.maxLength = props?.maxLength ?? 255\n    }\n\n    toString(value: string): string {\n        if (value === undefined) return undefined\n        if (value === null) return 'null'\n        return value\n    }\n\n    fromString(value: string): string {\n             if (value === undefined) return undefined\n        else if (value === 'null') return null\n        else if (value ===  null) return null\n        return value\n    }\n\n    validate(value: string) {\n        super.validate(value)\n        if (value === '' && this.required)\n            throw new Error('Field is required')\n        if (this.minLength && value.length < this.minLength)\n            throw new Error(`String must be at least ${this.minLength} characters long`)\n        if (this.maxLength && value.length > this.maxLength)\n            throw new Error(`String must be no more than ${this.maxLength} characters long`)\n    }\n    default(): string {\n        return ''\n    }\n}\n\n\nexport function STRING(props?: StringDescriptorProps) {\n    return new StringDescriptor(props)\n}\n","import { TypeDescriptor, TypeDescriptorProps } from './type'\n\nexport interface NumberDescriptorProps extends TypeDescriptorProps {\n    min?: number\n    max?: number\n}\n\nexport class NumberDescriptor extends TypeDescriptor<number> {\n    min: number\n    max: number\n\n    constructor(props?: NumberDescriptorProps) {\n        super(props)\n        this.min = props?.min ?? -Infinity\n        this.max = props?.max ?? Infinity\n    }\n\n    toString(value: number): string {\n        if (value === undefined) return undefined\n        if (value === null) return 'null'\n        return value.toString()\n    }\n\n    fromString(value: string): number {\n        if (value === undefined) return undefined\n        if (value === 'null') return null\n        if (value ===  null) return null\n        const result = parseInt(value)\n        if (isNaN(result)) return undefined\n        return result\n    }\n\n    validate(value: number) {\n        super.validate(value)\n        if (this.min && value < this.min)\n            throw new Error('Number should be greater than or equal to ' + this.min) \n        if (this.max && value > this.max)\n            throw new Error('Number should be less than or equal to ' + this.max)\n    }\n    default(): number {\n        return undefined\n    }\n}\n\nexport function NUMBER(props?: NumberDescriptorProps) : NumberDescriptor {\n    return new NumberDescriptor(props)\n}\n","import { TypeDescriptor, TypeDescriptorProps } from './type'\n\nexport interface BooleanDescriptorProps extends TypeDescriptorProps {}\n\nexport class BooleanDescriptor extends TypeDescriptor<boolean> {\n    constructor(props?: BooleanDescriptorProps) {\n        super(props)\n    }\n\n    toString(value: boolean): string {\n        if (value === undefined) return undefined\n        if (value === null) return 'null'\n        if (value === false) return 'false'\n        return 'true' \n    }\n\n    fromString(value: string): boolean {\n        if (value === 'false' || value === '0') return false\n        if (value === 'null' || value === null) return null\n        if (value === undefined) return undefined\n        return !!value\n    }\n\n    default(): boolean {\n        return false\n    }\n}\n\n\nexport function BOOLEAN(props?: BooleanDescriptorProps) {\n    return new BooleanDescriptor(props)\n}\n","import { TypeDescriptor, TypeDescriptorProps } from './type'\n\n\nexport interface DateDescriptorProps extends TypeDescriptorProps {\n    min?: Date \n    max?: Date \n}\n\nexport class DateDescriptor extends TypeDescriptor<Date> {\n    min: Date \n    max: Date \n    constructor(props?: DateDescriptorProps) {\n        super(props)\n        this.min = props?.min ?? new Date(0)\n        this.max = props?.max ?? new Date(Date.now() + 100 * 365 * 24 * 60 * 60 * 1000) // + 100 years\n    }\n    toString(value: Date): string {\n        if (value === undefined) return undefined\n        if (value === null) return 'null'\n        return value.toISOString()\n    }\n    fromString(value: string): Date | null | undefined  {\n        if (value === null || value === 'null') return null \n        if (value === undefined) return undefined\n        return new Date(value)\n    }\n    validate(value: Date) {\n        super.validate(value)\n        if (this.min && value < this.min)\n            throw new Error('Date should be later than ' + this.min.toISOString())\n        if (this.max && value > this.max)\n            throw new Error('Date should be earlier than ' + this.max.toISOString())\n    }\n    default(): Date {\n        return new Date()\n    }\n}\n\nexport function DATE(props?: DateDescriptorProps) {\n    return new DateDescriptor(props)\n}\n","import { DateDescriptor, DateDescriptorProps } from './date'\n\n\nexport class DateTimeDescriptor extends DateDescriptor {\n    toString(value: Date): string {\n        return value.toISOString()\n    }\n}\n\nexport function DATETIME(props?: DateDescriptorProps) {\n    return new DateTimeDescriptor(props)\n}","import { TypeDescriptor, TypeDescriptorProps } from './type'\n\n\nexport interface ArrayDescriptorProps extends TypeDescriptorProps {\n    minItems?: number\n    maxItems?: number\n}\n\nexport class ArrayDescriptor<T> extends TypeDescriptor<T[]> {\n    type    : TypeDescriptor<T>\n    minItems: number\n    maxItems: number\n    constructor(type: TypeDescriptor<T>, props?: ArrayDescriptorProps) {\n        super(props)\n        this.type     = type\n        this.minItems = props?.minItems ?? 0\n        this.maxItems = props?.maxItems ?? Infinity\n    }\n    toString(value: T[]): string {\n        if (!value) return undefined\n        if (!value.length) return undefined\n        return value.map(item => this.type.toString(item)).join(',')\n    }\n    fromString(value: string): T[] {\n        if (!value) return []\n        return value.split(',').map(item => this.type.fromString(item))\n    }\n    validate(value: T[]) {\n        super.validate(value)\n        if (this.minItems && value.length < this.minItems)\n            throw new Error('Items count is less than minimum allowed')\n        if (this.maxItems && value.length > this.maxItems)\n            throw new Error('Items count is more than maximum allowed')\n        value.forEach(item => this.type.validate(item))\n    }\n    default(): T[] {\n        return []\n    }\n}\n\nexport function ARRAY<T>(type: TypeDescriptor<T>, props?: ArrayDescriptorProps) {\n    return new ArrayDescriptor(type, props)\n}\n","import { TypeDescriptor } from './type'\n\n\nexport const ASC = true \nexport const DESC = false \n\nexport class OrderByDescriptor extends TypeDescriptor<[string, boolean]> {\n    toString(value: [string, boolean]): string {\n        if (!value || !value[0]) return undefined\n        return value[1] ? value[0] : '-' + value[0]\n    }\n    fromString(value: string): [string, boolean] {\n        if (!value) return undefined\n        return value[0] === '-' ? [value.substring(1), false] : [value, true]\n    } \n    validate(value: [string, boolean]): void {\n        if (!value)\n            throw new Error('Field is required') \n        if (!value[0])\n            throw new Error('Field is required')\n        if (value[1] === undefined)\n            throw new Error('Field is required')\n    }\n    default(): [string, boolean] {\n        return [undefined, ASC]\n    }\n}\n\nexport function ORDER_BY() {\n    return new OrderByDescriptor()\n}\n","import { action, makeObservable, observable, reaction, runInAction } from 'mobx'\nimport { Repository } from '../repository'\nimport { Model } from '../model'\nimport { Filter } from '../filters/Filter'\nimport { waitIsFalse } from '../utils'\nimport { Input } from '../inputs'\nimport { config } from '../config'\nimport { ARRAY, NUMBER, STRING, ORDER_BY } from '../types'\nimport { Destroyable } from '../object'\n\n\nexport const DISPOSER_AUTOUPDATE = '__autoupdate'\n\nexport interface QueryProps<M extends Model> {\n    repository                  ?: Repository<M>\n    //\n    filter                      ?: Filter\n    orderBy                     ?: Input<[string, boolean][]>\n    // pagination\n    offset                      ?: Input<number>\n    limit                       ?: Input<number>\n    // fields controll\n    relations                   ?: Input<string[]>\n    fields                      ?: Input<string[]> \n    omit                        ?: Input<string[]> \n    //\n    autoupdate                  ?: boolean\n}\n\n/* Query live cycle:\n\n    Event           isLoading   needToUpdate    isReady     items\n    ------------------------------------------------------------------------\n    Create          -           -               -           []\n\n\n    loading start   +!          -               -           reset error\n        |\n    loading finish  -!          -               +!          set some items or error\n\n\n    filter changes  -           +!              -!\n        |\n    loading start   +!          -!              -           reset error\n        |\n    loading finish  -!          -               +!          set some items or error\n\n*/\n\nexport class Query <M extends Model> implements Destroyable {\n\n    readonly repository: Repository<M>\n    readonly filter    : Filter\n    readonly orderBy   : Input<[string, boolean][]>\n    readonly offset    : Input<number>\n    readonly limit     : Input<number>\n    readonly relations : Input<string[]>\n    readonly fields    : Input<string[]>\n    readonly omit      : Input<string[]>\n\n    @observable protected __items: M[] = []         // items from the server\n    @observable total           : number              // total count of items on the server, usefull for pagination\n    @observable isLoading       : boolean = false     // query is loading the data\n    @observable isNeedToUpdate  : boolean = true      // query was changed and we need to update the data\n    @observable timestamp       : number              // timestamp of the last update, usefull to aviod to trigger react hooks twise\n    @observable error           : string              // error message\n\n    get items       () { return this.__items }      // the items can be changed after the load (post processing)\n\n    protected controller        : AbortController\n    protected disposers         : (()=>void)[] = []\n    protected disposerObjects   : {[field: string]: ()=>void} = {}\n\n    constructor(props: QueryProps<M>) {\n        let {\n            repository, filter, orderBy, offset, limit,\n            relations, fields, omit,\n            autoupdate = true \n        } = props\n\n        this.repository = repository \n        this.filter    = filter\n        this.orderBy   = orderBy    ? orderBy   : new Input(ARRAY(ORDER_BY()))\n        this.offset    = offset     ? offset    : new Input(NUMBER())\n        this.limit     = limit      ? limit     : new Input(NUMBER())\n        this.relations = relations  ? relations : new Input(ARRAY(STRING()))\n        this.fields    = fields     ? fields    : new Input(ARRAY(STRING()))\n        this.omit      = omit       ? omit      : new Input(ARRAY(STRING()))\n        this.autoupdate = autoupdate\n        makeObservable(this)\n\n        this.disposers.push(reaction(\n            // watch the dependenciesAreReady and value only\n            // because isNeedToUpdate should be set to true \n            // if dependenciesAreReady or/and value are triggered and isNeedToUpdate is false\n            () => {\n                return {dependenciesAreReady: this.dependenciesAreReady, value: this.toString} \n            },\n            ({dependenciesAreReady, value}) => {\n                if(dependenciesAreReady && !this.isNeedToUpdate)\n                    runInAction(() => this.isNeedToUpdate = true)\n            },\n            { fireImmediately: true }\n        ))\n    }\n\n    destroy() {\n        this.controller?.abort()\n        while(this.disposers.length) {\n            this.disposers.pop()()\n        }\n        for(let __id in this.disposerObjects) {\n            this.disposerObjects[__id]()\n            delete this.disposerObjects[__id]\n        } \n    }\n\n    loading = async () => waitIsFalse(this, 'isLoading')\n    ready   = async () => waitIsFalse(this, 'isReady')\n\n    get autoupdate() : boolean {\n        return !! this.disposerObjects[DISPOSER_AUTOUPDATE]\n    }\n\n    // Note: autoupdate trigger always the load(),\n    // shadowLoad() is not make sense to trigger by autoupdate\n    // because autoupdate means => user have changed something on UI inputs\n    // and we should to show the UI reaction\n    set autoupdate(value: boolean) {\n        if (value !== this.autoupdate) {  // indepotent guarantee\n            // on \n            if (value) {\n                this.disposerObjects[DISPOSER_AUTOUPDATE] = reaction(\n                    () => this.isNeedToUpdate && this.dependenciesAreReady,\n                    (updateIt, old) => {\n                        if(updateIt && updateIt !== old) {\n                            // run the load() in the next tick\n                            setTimeout(() => this.load())\n                            // }, config.AUTO_UPDATE_DELAY)\n                        }\n\n                    },\n                    { fireImmediately: true, delay: config.AUTO_UPDATE_DELAY }\n                )\n            }\n            // off\n            else {\n                this.disposerObjects[DISPOSER_AUTOUPDATE]()\n                delete this.disposerObjects[DISPOSER_AUTOUPDATE]\n            }\n        }\n    }\n\n    // Need to quick compare the querie's state\n    toString() {\n        return `${this.filter === undefined ? '' : this.filter.URLSearchParams.toString()}`\n        +`|${this.orderBy.toString()}`\n        +`|${this.offset.toString()}|${this.limit.toString()}`\n        +`|${this.relations.toString()}|${this.fields.toString()}|${this.omit.toString()}`\n    }\n\n    get dependenciesAreReady() {\n        return (this.filter === undefined || this.filter.isReady)\n            && this.orderBy   .isReady\n            && this.offset    .isReady\n            && this.limit     .isReady\n            && this.relations .isReady\n            && this.fields    .isReady\n            && this.omit      .isReady\n    }\n\n    // NOTE: if we use only shadowLoad() the isLoading will be always false.\n    // In this case isReady is equal to !isNeedToUpdate.\n    get isReady() {\n        return !this.isNeedToUpdate && !this.isLoading\n    }\n\n    // use it if everybody should know that the query data is updating\n    @action('MO: Query Base - load')\n    async load() {\n        this.isLoading = true\n        try {\n            await this.shadowLoad()\n        }\n        finally {\n            runInAction(() => {\n                // the loading can be canceled by another load\n                // in this case we should not touch isLoading\n                if (!this.controller) this.isLoading = false\n            })\n        }\n    }\n\n    // use it directly instead of load() if nobody should know that the query data is updating\n    // for example you need to update the current data on the page and you don't want to show a spinner\n    @action('MO: Query Base - shadow load')\n    async shadowLoad() {\n\n        this.isNeedToUpdate = false \n        this.error = undefined\n\n        if (this.controller)\n            this.controller.abort()\n        this.controller = new AbortController()\n\n        // NOTE: Date.now() is used to get the current timestamp\n        //       and it can be the same in the same tick \n        //       in this case we should increase the timestamp by 1\n        const now = Date.now()\n        if (this.timestamp === now) this.timestamp += 1\n        else                        this.timestamp = now \n\n        try {\n            await this.__load()\n        }\n        catch (e) {\n            // ignore the cancelation of the request\n            if (e.name !== 'AbortError' && e.message !== 'canceled') {\n                // console.error(e)\n                runInAction(() => this.error = e.message )\n            }\n        }\n        finally {\n            this.controller = undefined\n        }\n    }\n\n    protected async __load() {\n        const objs = await this.repository.load(this, { controller: this.controller })\n        runInAction(() => this.__items = objs)\n    }\n}\n","import { action, runInAction } from 'mobx'\nimport { Query, QueryProps } from './query'\nimport { config } from '../config'\nimport { Model } from '../model'\n\n\nexport class QueryPage<M extends Model> extends Query<M> {\n\n    @action('MO: set page')      setPage    (n   : number) { this.offset.set(this.limit.value * (n > 0 ? n-1 : 0)) }\n    @action('MO: set page size') setPageSize(size: number) { this.limit.set(size); this.offset.set(0) }\n    goToFirstPage() { this.setPage(1) }\n    goToPrevPage () { this.setPage(this.current_page - 1) }\n    goToNextPage () { this.setPage(this.current_page + 1) }\n    goToLastPage () { this.setPage(this.total_pages) }\n\n    get is_first_page() : boolean { return this.offset.value === 0 }\n    get is_last_page () : boolean { return this.offset.value + this.limit.value >= this.total }\n    get current_page()  : number  { return this.offset.value / this.limit.value + 1 }\n    get total_pages()   : number  { return this.total ? Math.ceil(this.total / this.limit.value) : 1 }\n    // for compatibility with js code style\n    get isFirstPage() : boolean { return this.is_first_page }\n    get isLastPage () : boolean { return this.is_last_page } \n    get currentPage() : number  { return this.current_page } \n    get totalPages()  : number  { return this.total_pages } \n\n    constructor(props: QueryProps<M>) {\n        super(props)\n        runInAction(() => {\n            if (this.offset.value === undefined) this.offset.set(0)\n            if (this.limit.value  === undefined) this.limit.set(config.DEFAULT_PAGE_SIZE)\n        })\n    }\n\n    async __load() {\n        const [objs, total] = await Promise.all([\n            this.repository.load(this, { controller: this.controller }),\n            this.repository.getTotalCount(this.filter, { controller: this.controller })\n        ])\n        runInAction(() => {\n            this.__items = objs\n            this.total = total\n        })\n    }\n}\n","import { action, computed, observe, reaction } from 'mobx'\nimport { Query, QueryProps } from './query'\nimport { ASC } from '../types'\nimport { Model } from '../model'\n\n\nexport class QueryCacheSync <M extends Model> extends Query<M> {\n\n    constructor(props: QueryProps<M>) {\n        super(props)\n        // watch the cache for changes, and update items if needed\n        this.disposers.push(observe(props.repository.modelDescriptor.cache.store, \n            action('MO: Query - update from cache changes',\n            (change: any) => {\n                if (change.type == 'add') {\n                    this.__watch_obj(change.newValue)\n                }\n                if (change.type == 'delete') {\n                    let id = change.name\n                    let obj = change.oldValue\n\n                    this.disposerObjects[id]()\n                    delete this.disposerObjects[id]\n\n                    let i = this.__items.indexOf(obj)\n                    if (i != -1) {\n                        this.__items.splice(i, 1)\n                        this.total = this.__items.length\n                    }\n                }\n            })\n        ))\n\n        // ch all exist objects of model \n        for(let [id, obj] of props.repository.modelDescriptor.cache.store) {\n            this.__watch_obj(obj)\n        }\n    }\n\n    async __load() {\n        if (this.controller) this.controller.abort()\n        this.controller = new AbortController()\n        try {\n            await this.repository.load(this, { controller:  this.controller })\n            // Query don't need to overide the __items,\n            // query's items should be get only from the cache\n        } catch (e) {\n            if (e.name !== 'AbortError')  throw e\n        } \n        // we have to wait the next tick\n        // mobx should finished recalculation for model-objects\n        await Promise.resolve()\n        // await new Promise(resolve => setTimeout(resolve))\n    }\n\n    @computed\n    get items() { \n        let __items = this.__items.map(x=>x) // copy __items (not deep)\n        if (this.orderBy.value && this.orderBy.value.length) {\n            let compare = (a, b) => {\n                for(const [key, value] of this.orderBy.value) {\n                    if (value === ASC) {\n                        if ((a[key] === undefined || a[key] === null) && (b[key] !== undefined && b[key] !== null)) return  1\n                        if ((b[key] === undefined || b[key] === null) && (a[key] !== undefined && a[key] !== null)) return -1\n                        if (a[key] < b[key]) return -1\n                        if (a[key] > b[key]) return  1\n                    }\n                    else {\n                        if ((a[key] === undefined || a[key] === null) && (b[key] !== undefined && b[key] !== null)) return -1\n                        if ((b[key] === undefined || b[key] === null) && (a[key] !== undefined && a[key] !== null)) return  1\n                        if (a[key] < b[key]) return  1\n                        if (a[key] > b[key]) return -1\n                    }\n                }\n                return 0\n            }\n            __items.sort(compare)\n        }\n        return __items \n    }\n\n    __watch_obj(obj) {\n        if (this.disposerObjects[obj.id]) this.disposerObjects[obj.id]()\n        this.disposerObjects[obj.id] = reaction(\n            () =>  !this.filter || this.filter.isMatch(obj),\n            action('MO: Query - obj was changed',\n            (should: boolean) => {\n                let i = this.__items.indexOf(obj)\n                // should be in the items and it is not in the items? add it to the items\n                if ( should && i == -1) this.__items.push(obj)\n                // should not be in the items and it is in the items? remove it from the items\n                if (!should && i != -1) this.__items.splice(i, 1)\n\n                if (this.total != this.__items.length) \n                    this.total = this.__items.length\n            }),\n            { fireImmediately: true }\n        )\n    }\n}\n","import { action, runInAction } from 'mobx'\nimport { Model } from '../model'\nimport { Query, QueryProps } from './query'\nimport { config } from '../config'\n\n\nexport class QueryStream <M extends Model> extends Query<M> {\n    // you can reset all and start from beginning\n    @action('MO: fisrt page') goToFirstPage() { this.__items = []; this.offset.set(0) }\n    // you can scroll only forward\n    @action('MO: next page')  goToNextPage () { this.offset.set(this.offset.value + this.limit.value) }\n\n    constructor(props: QueryProps<M>) {\n        super(props)\n        runInAction(() => {\n            if (this.offset.value === undefined) this.offset.set(0)\n            if (this.limit.value  === undefined) this.limit.set(config.DEFAULT_PAGE_SIZE)\n        })\n    }\n\n    async __load() {\n        const objs = await this.repository.load(this, { controller: this.controller })\n        runInAction(() => {\n            this.__items.push(...objs)\n            // total is not make sense for infinity queries\n            // total = 1 show that last page is reached\n            if (objs.length < this.limit.value) this.total = 1\n        })\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Query } from './query'\nimport { Model } from '../model'\n\n/**\n * QueryRaw is a class to load raw objects from the server \n * without converting them to models using the repository.\n */\n\nexport class QueryRaw<M extends Model> extends Query<M> {\n    async __load() {\n        const objs = await this.repository.adapter.load(this, { controller: this.controller })\n        runInAction(() => {\n            this.__items = objs\n        })\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Model } from '../model'\nimport { QueryPage } from './query-page'\n\n/**\n * QueryRawPage is a class to load raw objects from the server \n * without converting them to models using the repository.\n */\n\nexport class QueryRawPage<M extends Model> extends QueryPage<M> {\n    async __load() {\n        const objs = await this.repository.adapter.load(this)\n        const total = await this.repository.getTotalCount(this.filter)\n        runInAction(() => {\n            this.__items = objs\n            this.total = total\n        })\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Query, QueryProps } from './query'\n\n\nexport class QueryDistinct extends Query<any> {\n    readonly field: string\n    \n    constructor(field: string, props: QueryProps<any>) {\n        super(props)\n        this.field = field\n    }\n\n    async __load() {\n        const objs = await this.repository.getDistinct(this.filter, this.field, { controller: this.controller })\n        runInAction(() => {\n            this.__items = objs\n        })\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Model, ModelDescriptor } from './model'\nimport { ID } from './types'\nimport { Query, QueryProps, QueryPage, QueryRaw, QueryRawPage, QueryCacheSync, QueryStream, QueryDistinct } from './queries'\nimport { Filter } from './filters'\nimport { Adapter, RequestConfig } from './adapters/adapter'\n\n/**\n * Repository class is responsible for CRUD operations on the model.\n */\nexport class  Repository<M extends Model> {\n    constructor(\n        readonly modelDescriptor : ModelDescriptor<M>,\n        public   adapter        ?: Adapter<M>\n    ) {}\n\n    /**\n     * Create the object. \n     */\n    async create(obj: M, config?: RequestConfig) : Promise<M> {\n        let raw_obj = await this.adapter.create(obj.rawObj, config) // Id can be defined in the frontend => id should be passed to the create method if they exist\n        const rawObjID = this.modelDescriptor.getID(raw_obj)\n        const cachedObj = this.modelDescriptor.cache.get(rawObjID)\n        if (cachedObj) obj = cachedObj\n        obj.updateFromRaw(raw_obj)\n        obj.refreshInitData()\n        return obj\n    }\n\n    /**\n     * Update the object.\n     */\n    async update(obj: M, config?: RequestConfig) : Promise<M> {\n        let raw_obj = await this.adapter.update(obj.ID, obj.only_changed_raw_data, config)\n        obj.updateFromRaw(raw_obj)\n        obj.refreshInitData()\n        return obj\n    }\n\n    /**\n     * Save the object.\n     * If the object has ID, it will be updated, otherwise it will be created.\n     */\n    async save(obj: M, config?: RequestConfig) : Promise<M> {\n        return obj.ID ? await this.update(obj, config) : await this.create(obj, config)\n    }\n\n    /**\n     * Delete the object.\n     */\n    async delete(obj: M, config?: RequestConfig) : Promise<void> {\n        await this.adapter.delete(obj.ID, config)\n        obj.destroy()\n    }\n\n    /**\n     * Run action for the object.\n     */\n    async action(obj: M, name: string, kwargs: Object, config?: RequestConfig) : Promise<any> {\n        return await this.adapter.action(obj.ID, name, kwargs, config)\n    }\n\n    /**\n     * Returns ONE object by id.\n     */\n    async get(id: ID, config?: RequestConfig): Promise<M> {\n        let raw_obj = await this.adapter.get(id, config)\n        return this.modelDescriptor.updateCachedObject(raw_obj)\n    }\n\n    /**\n     * Returns ONE object by query.\n     */\n    async find(query: Query<M>, config?: RequestConfig): Promise<M> {\n        let raw_obj = await this.adapter.find(query, config)\n        return this.modelDescriptor.updateCachedObject(raw_obj)\n    }\n\n    /**\n     * Returns MANY objects by query. \n     */\n    async load(query: Query<M>, config?: RequestConfig):Promise<M[]> {\n        let raw_objs = await this.adapter.load(query, config)\n        let objs: M[] = []\n        runInAction(() => {\n            for (const raw_obj of raw_objs) {\n                objs.push(this.modelDescriptor.updateCachedObject(raw_obj))\n            }\n        })\n        return objs\n    }\n\n    /**\n     * Returns total count of objects.\n     */\n    async getTotalCount(filter: Filter, config?: RequestConfig): Promise<number> {\n        return await this.adapter.getTotalCount(filter, config)\n    }\n    /**\n     * Returns distinct values for the field.\n     */\n    async getDistinct(filter: Filter, field: string, config?: RequestConfig): Promise<any[]> {\n        return await this.adapter.getDistinct(filter, field, config)\n    }\n\n    getQuery         (props: QueryProps<M>): Query         <M> { return new Query         ({...props, repository: this }) }\n    getQueryPage     (props: QueryProps<M>): QueryPage     <M> { return new QueryPage     ({...props, repository: this }) }\n    getQueryRaw      (props: QueryProps<M>): QueryRaw      <M> { return new QueryRaw      ({...props, repository: this }) }\n    getQueryRawPage  (props: QueryProps<M>): QueryRawPage  <M> { return new QueryRawPage  ({...props, repository: this }) }\n    getQueryCacheSync(props: QueryProps<M>): QueryCacheSync<M> { return new QueryCacheSync({...props, repository: this }) }\n    getQueryStream   (props: QueryProps<M>): QueryStream   <M> { return new QueryStream   ({...props, repository: this }) }\n    getQueryDistinct (field: string, props: QueryProps<M>): QueryDistinct { return new QueryDistinct(field, {...props, repository: this }) }\n}\n","import { Repository } from '../repository'\nimport Model from './model'\nimport { ModelDescriptor } from './model-descriptor'\n\n/**\n * Is a map of all registered models in the application. \n * It's a singleton.\n */\nconst models = new Map<string, ModelDescriptor<any>>()\nexport default models\n\n\n\nexport function clearModels() {\n    for(let [modelName, modelDescriptor] of models) {\n        modelDescriptor.idFieldDescriptors.disposers.forEach(disposer => disposer())\n        for(let fieldName in modelDescriptor.fields) {\n            modelDescriptor.fields[fieldName].disposers.forEach(disposer => disposer())\n        }\n        for(let fieldName in modelDescriptor.relations) {\n            modelDescriptor.relations[fieldName].disposers.forEach(disposer => disposer())\n        }\n    }\n    models.clear()\n}\n\n","import { action,  computed,  observable } from 'mobx'\nimport { \n    Query, QueryProps, QueryPage, QueryRaw, QueryRawPage,\n    QueryCacheSync, QueryDistinct, QueryStream\n} from '../queries'\nimport { Repository } from '../repository'\nimport { ID } from '../types'\nimport { Destroyable } from '../object'\nimport models from './models'\nimport { ModelDescriptor } from './model-descriptor'\n\n\nexport default abstract class Model implements Destroyable {\n    /**\n     * Static version initializes in the id decorator.\n     * Instance version initializes in the constructor that declare in model decorator.\n     * It is used for registering the model in the models map.\n     * It is used for get the model descriptor from the models map.\n     */\n    static   modelName: string\n    readonly modelName: string\n\n    /**\n     * Default repository that used in methods like `load`, `getTotalCount`, etc.\n     */\n    static defaultRepository: Repository<Model>\n    getDefaultRepository<T extends Model>(): Repository<T> {\n        return (this.modelDescriptor.cls as any).defaultRepository\n    }\n\n    /**\n     * @returns {ModelDescriptor} - model description\n     */\n    static getModelDescriptor<T extends Model>(): ModelDescriptor<T> {\n        return models.get(this.modelName) as ModelDescriptor<T>\n    }\n    /**\n     * @param init - initial data of the object \n     */\n    constructor (init?: {}) {}\n    /**\n     * @returns {ModelDescriptor} - model descriptor\n     */\n    get modelDescriptor(): ModelDescriptor<Model> {\n        return models.get(this.modelName)\n    }\n\n    /**\n     * ID returns id value from the object.\n     * Id field can be different from the id field name. \n     */\n    @computed({ keepAlive: true })\n    get ID(): ID {\n        return this.modelDescriptor.getID(this)\n    }\n\n    /**\n     * Save the initial data of the object that was loaded from the server.\n     */\n    @observable init_data: any   \n    /**\n     * disposers for mobx reactions and interceptors, you can add your own disposers\n     */\n    disposers = new Map()\n\n    /**\n     * Destructor of the object.\n     * It eject from cache and removes all disposers.\n     */\n    @action destroy() {\n        // trigger in id fields will ejenct the object from cache\n        this[this.modelDescriptor.id] = undefined\n        while(this.disposers.size) {\n            this.disposers.forEach((disposer, key) => {\n                disposer()\n                this.disposers.delete(key)\n            })\n        }\n    }\n\n    get model() : any {\n        return (<any>this.constructor).__proto__\n    }\n\n    /**\n     * @returns {Object} - data only from fields (no id)\n     */\n    get rawData() : Object {\n        let rawData: any = {}\n        for (const fieldName in this.modelDescriptor.fields) {\n            if(this[fieldName] !== undefined) {\n                rawData[fieldName] = this[fieldName]\n            }\n        }\n        return rawData\n    }\n\n    /**\n     * @returns {Object} - it is rawData + id field\n     */\n    get rawObj() : Object {\n        const idFieldName   = this.modelDescriptor.id\n        const rawObj        = this.rawData\n        rawObj[idFieldName] = this[idFieldName] \n        return rawObj\n    }\n\n    get only_changed_raw_data() : any {\n        let raw_data: any = {}\n        for(let field_name in this.modelDescriptor.fields) {\n            if(this[field_name] != this.init_data[field_name]) {\n                raw_data[field_name] = this[field_name]\n            }\n        }\n        return raw_data\n    }\n\n    get is_changed() : boolean {\n        for(let field_name in this.modelDescriptor.fields) {\n            if (this[field_name] != this.init_data[field_name]) {\n                return true\n            }\n        }\n        return false\n    }\n\n    @action refreshInitData() {\n        if(this.init_data === undefined) this.init_data = {}\n        for (let field_name in this.modelDescriptor.fields) {\n            this.init_data[field_name] = this[field_name]\n        }\n    }\n\n    @action cancelLocalChanges() {\n        for (let field_name in this.modelDescriptor.fields) {\n            if (this[field_name] !== this.init_data[field_name]) {\n                this[field_name] = this.init_data[field_name]\n            }\n        }\n    }\n\n    /**\n     * Update the object from the raw data.\n     * @description\n     * It is used when raw data comes from any source (server, websocket, etc.) and you want to update the object. \n     * TODO: ID is not ready! I'll finish it later. \n     */\n    @action updateFromRaw(rawObj) {\n        // update id if not exist\n        const idField = this.modelDescriptor.id\n        if (this[idField] === null || this[idField] === undefined) {\n            this[idField] = rawObj[idField] \n        }\n\n        // update the fields if the raw data is exist and it is different\n        for(let fieldName in this.modelDescriptor.fields) {\n            if (rawObj[fieldName] !== undefined && rawObj[fieldName] !== this[fieldName]) {\n                this[fieldName] = rawObj[fieldName]\n            }\n        }\n\n        // update related objects \n        for (let relation in this.modelDescriptor.relations) {\n            const settings = this.modelDescriptor.relations[relation].settings\n            if (settings.foreign_model && rawObj[relation]) {\n                settings.foreign_model.getModelDescriptor().updateCachedObject(rawObj[relation])\n                this[settings.foreign_id] = rawObj[relation].id\n            }\n            else if (settings.remote_model && rawObj[relation]) {\n                // many\n                if (Array.isArray(rawObj[relation])) {\n                    for (const i of rawObj[relation]) {\n                        settings.remote_model.getModelDescriptor().updateCachedObject(i)\n                    }\n                }\n                // one\n                else {\n                    settings.remote_model.getModelDescriptor().updateCachedObject(rawObj[relation])\n                }\n            }\n        }\n    }\n\n    // --------------------------------------------------------------------------------------------\n    // helper instance functions\n    // --------------------------------------------------------------------------------------------\n\n    async action(name: string, kwargs: Object) { return await this.model.repository.action(this, name, kwargs) }\n    async create<T extends Model>(): Promise<T> { return await this.getDefaultRepository().create(this) as T }\n    async update<T extends Model>(): Promise<T> { return await this.getDefaultRepository().update(this) as T }\n    async save<T extends Model>(): Promise<T> { return await this.getDefaultRepository().save(this) as T }\n    async delete() { return await this.getDefaultRepository().delete(this) }\n    async refresh() { return await this.getDefaultRepository().get(this.ID) }\n\n    // --------------------------------------------------------------------------------------------\n    // helper class functions\n    // --------------------------------------------------------------------------------------------\n    static getQuery         <T extends Model>(props: QueryProps<T>): Query         <T> { return (this.defaultRepository as Repository<T>).getQuery(props) }\n    static getQueryPage     <T extends Model>(props: QueryProps<T>): QueryPage     <T> { return (this.defaultRepository as Repository<T>).getQueryPage(props) }\n    static getQueryRaw      <T extends Model>(props: QueryProps<T>): QueryRaw      <T> { return (this.defaultRepository as Repository<T>).getQueryRaw(props) }\n    static getQueryRawPage  <T extends Model>(props: QueryProps<T>): QueryRawPage  <T> { return (this.defaultRepository as Repository<T>).getQueryRawPage(props) }\n    static getQueryCacheSync<T extends Model>(props: QueryProps<T>): QueryCacheSync<T> { return (this.defaultRepository as Repository<T>).getQueryCacheSync(props) }\n    static getQueryStream   <T extends Model>(props: QueryProps<T>): QueryStream   <T> { return (this.defaultRepository as Repository<T>).getQueryStream(props) }\n    static getQueryDistinct <T extends Model>(field: string, props: QueryProps<T>): QueryDistinct {\n        return (this.defaultRepository as Repository<T>).getQueryDistinct(field, props)\n    }\n    static get<T extends Model>(id: ID): T {\n        return this.getModelDescriptor().cache.get(id) as T\n    }\n    static async findById<T extends Model>(id: ID) : Promise<T> {\n        return (this.defaultRepository as Repository<T>).get(id)\n    }\n    static async find<T extends Model>(query: Query<T>) : Promise<T> {\n        return (this.defaultRepository as Repository<T>).find(query)\n    }\n}\n","import { makeObservable } from 'mobx'\nimport Model from './model'\nimport models from './models'\nimport { Repository } from '../repository'\n\n\n/**\n * Model decorator.\n * Note: Class decorator has constructor of class as argument.\n */\nexport default function model(constructor) {\n    const modelName = constructor.name\n\n    // check that class extends Model\n    if (!(constructor.prototype instanceof Model))\n        throw new Error(`Class \"${modelName}\" should extends Model!`)\n\n    // id fields should register the model into models\n    const modelDescriptor = models.get(modelName)\n    if (!modelDescriptor)\n        throw new Error(`Model \"${modelName}\" should be registered in models. Did you forget to declare any id?`)\n    \n    // set default repository\n    constructor.defaultRepository = new Repository(modelDescriptor)\n\n    // the field decorators run first, then the model decorator\n    // id decorator creates the model descriptor and registers it in models \n    // so, we cannot catch the case when we try to declare a model with the same name \n\n    // the new constructor\n    let f : any = function (...args) {\n        let c : any = class extends constructor { constructor (...args) { super(...args) } }\n            c.__proto__ = constructor \n\n        let obj = new c()\n        obj.modelName = modelName\n        makeObservable(obj)\n\n        const descriptor = obj.modelDescriptor\n        // apply id decorators\n        if (descriptor.id === undefined) \n            throw new Error(`Model \"${modelName}\" should have id field decorator!`)\n\n        descriptor.idFieldDescriptors.decorator(obj, descriptor.id)\n        // apply field decorators \n        for(const fieldName in descriptor.fields)\n            descriptor.fields[fieldName].decorator(obj, fieldName)\n        // apply relations decorators\n        for(const fieldName in descriptor.relations)\n            descriptor.relations[fieldName].decorator(obj, fieldName)\n\n        if (args[0]) obj.updateFromRaw(args[0])\n        obj.refreshInitData()\n        return obj\n    }\n    f.modelName = modelName\n    f.__proto__ = constructor \n    f.prototype = constructor.prototype  // copy prototype so intanceof operator still works\n    Object.defineProperty(f, 'name', { value: constructor.name })\n    modelDescriptor.cls = f\n    return f  // return new constructor (will override original)\n}\n","import { Cache } from '../cache'\nimport { Repository } from '../repository' \nimport { ID, TypeDescriptor } from '../types'\nimport Model from './model'\n\n/**\n * ModelFieldDescriptor is a class that contains all the information about the field.\n */\nexport class ModelFieldDescriptor<T, F> {\n    decorator   : (obj: T) => void\n    disposers   : (()=>void)[] = []\n    type       ?: TypeDescriptor<F>\n    settings   ?: any\n}\n\n/**\n * ModelDescriptor is a class that contains all the information about the model.\n */\nexport class ModelDescriptor<T extends Model> {\n    /**\n     * Model class\n     */\n    cls: new (args) => T\n    /**\n     * Id fields\n     */\n    id: string\n    idFieldDescriptors: ModelFieldDescriptor<T, ID>\n    /**\n     * Fields is a map of all fields in the model that usually use in repository.\n     */ \n    fields: {[field_name: string]: ModelFieldDescriptor<T, any>} = {}\n    /**\n     * Relations is a map of all relations (foreign, one, many) in the model. \n     * It is derivative and does not come from outside.\n     */\n    relations : {[field_name: string]: ModelFieldDescriptor<T, any>} = {}\n\n    readonly cache: Cache<T> = new Cache<T>()\n\n    /**\n     * Return id value from object. Object can have id field with different name.\n     */\n    getID(obj: Object): ID {\n        return obj[this.id] \n    }\n\n    updateCachedObject(rawObj: Object) : T | undefined {\n        const rawObjID = this.getID(rawObj)\n        const cachedObj = this.cache.get(rawObjID)\n        if (cachedObj) {\n            cachedObj.updateFromRaw(rawObj)\n            cachedObj.refreshInitData()\n            return cachedObj\n        } \n        return new this.cls(rawObj)\n    }\n\n}\n","import { extendObservable } from 'mobx'\nimport { TypeDescriptor } from '../types/type'\nimport { models } from '../model'\n\n\n/**\n * Decorator for fields \n */\nexport function field<T>(typeDescriptor?: TypeDescriptor<T>, observable: boolean = true) {\n    return (cls: any, fieldName: string) => {\n        const modelName = cls.constructor.name\n        if (!models.has(modelName))\n            throw new Error(`Model \"${modelName}\" should be registered in models. Did you forget to declare any id?`)\n\n        let modelDescription = models.get(modelName)\n        modelDescription.fields[fieldName] = {\n            decorator: (obj: T) => {\n                if (observable) extendObservable(obj, { [fieldName]: obj[fieldName] })\n            },\n            disposers: [],\n            type: typeDescriptor,\n            settings: {}\n        } \n    }\n}\n","import { Model, ModelDescriptor, models } from '../model'\nimport {extendObservable, reaction, action} from 'mobx'\n\n\n/**\n * Decorator for foreign fields\n */\nexport function foreign<M extends Model>(foreign_model: any, foreign_id?: string) {\n    return function (cls: any, field_name: string) {\n        const modelName = cls.modelName ?? cls.constructor.name\n        if (!modelName)\n            throw new Error('Model name is not defined. Did you forget to declare any id fields?')\n\n        const modelDescription = models.get(modelName)\n        if (!modelDescription)\n            throw new Error(`Model ${modelName} is not registered in models. Did you forget to declare any id fields?`)\n\n        // if it is empty then try auto detect it (it works only with single id) \n        foreign_id = foreign_id ?? `${field_name}_id`\n\n        modelDescription.relations[field_name] = {\n            decorator: (obj: M) => {\n                // make observable and set default value\n                extendObservable(obj, { [field_name]: undefined })\n                // watch on foreign id\n                obj.disposers.set(`foreign ${field_name}`, reaction(\n                    // watch on foreign cache for foreign object\n                    () => {\n                        const foreignID = obj[foreign_id] \n                        if (foreignID === undefined) return undefined\n                        if (foreignID === '') return undefined\n                        if (foreignID === null) return null  // foreign object can be null\n                        if (foreignID === 'null') return null  // foreign object can be null\n                        return foreign_model.getModelDescriptor().cache.get(foreignID)\n                    },\n                    // update foreign field\n                    action('MO: Foreign - update',\n                        (_new, _old) => obj[field_name] = _new \n                    ),\n                    {fireImmediately: true}\n                ))\n            },\n            disposers: [],\n            settings: { foreign_model, foreign_id }\n        } \n    }\n}\n","import { observe, extendObservable, runInAction, reaction, action } from 'mobx'\nimport { Model, models } from '../model'\n\n\nexport function one<M extends Model>(remote_model: any, remote_foreign_id?: string) {\n    return function (cls: any, field_name: string) {\n\n        const modelName = cls.modelName ?? cls.constructor.name\n        if (!modelName)\n            throw new Error('Model name is not defined. Did you forget to declare any id fields?')\n\n        const modelDescription = models.get(modelName)\n        if (!modelDescription)\n            throw new Error(`Model ${modelName} is not registered in models. Did you forget to declare any id fields?`)\n\n        remote_foreign_id = remote_foreign_id ?? `${modelName.toLowerCase()}_id`\n\n        const remoteModelDescriptor = remote_model.getModelDescriptor()\n        const disposer_name = `MO: One - update - ${modelName}.${field_name}` \n\n        modelDescription.relations[field_name] = {\n            decorator: (obj: M) => {\n                let foreignObj = undefined\n                for(let [_, cacheObj] of remoteModelDescriptor.cache.store) {\n                    const ID = cacheObj[remote_foreign_id]\n                    if (obj.ID === ID && ID !== undefined) {\n                        foreignObj = cacheObj\n                        break\n                    }\n                }\n                extendObservable(obj, { [field_name]: foreignObj })\n            },\n            disposers: [],\n            settings: { remote_model, remote_foreign_id } \n        }\n\n        modelDescription.relations[field_name].disposers.push(\n            observe(remoteModelDescriptor.cache.store, (change: any) => {\n                let remote_obj\n                switch (change.type) {\n                    case 'add':\n                        remote_obj = change.newValue\n                        remote_obj.disposers.set(disposer_name, reaction(\n                            () => {\n                                const foreignID = remote_obj[remote_foreign_id]\n                                return { \n                                    id: foreignID, \n                                    obj: modelDescription.cache.get(foreignID) \n                                }\n                            },\n                            action(disposer_name, (_new: any, _old: any) => {\n                                if (_old?.obj) _old.obj[field_name] = _new.id ? undefined : null\n                                if (_new?.obj) _new.obj[field_name] = remote_obj\n                            }),\n                            {fireImmediately: true}\n                        ))\n                        break\n                    case 'delete':\n                        remote_obj = change.oldValue\n                        if (remote_obj.disposers.get(disposer_name)) {\n                            remote_obj.disposers.get(disposer_name)()\n                            remote_obj.disposers.delete(disposer_name)\n                        }\n                        const foreignID = remote_obj[remote_foreign_id]\n                        let obj = modelDescription.cache.get(foreignID)\n                        if (obj) \n                            runInAction(() => { obj[field_name] = undefined })\n                        break\n                }\n            })\n        )\n    }\n}\n","import { observe, extendObservable, runInAction, reaction, action } from 'mobx'\nimport { Model, models } from '../model'\n\n/**\n * Decorator for many fields\n */\nexport function many<M extends Model>(remote_model: any, remote_foreign_id?: string) {\n    return function (cls: any, field_name: string) {\n        const modelName = cls.modelName ?? cls.constructor.name\n        if (!modelName)\n            throw new Error('Model name is not defined. Did you forget to declare any id fields?')\n\n        const modelDescription = models.get(modelName)\n        if (!modelDescription)\n            throw new Error(`Model ${modelName} is not registered in models. Did you forget to declare any id fields?`)\n\n        // if it is empty then try auto detect it (it works only with single id) \n        remote_foreign_id = remote_foreign_id ?? `${modelName.toLowerCase()}_id`\n\n        modelDescription.relations[field_name] = {\n            decorator: (obj: M) => {\n                extendObservable(obj, { [field_name]: [] })\n            },\n            disposers: [],\n            settings: { remote_model, remote_foreign_id } \n        }\n\n        const remoteModelDescriptor = remote_model.getModelDescriptor()\n\n\n        const disposer_name = `MO: Many - update - ${modelName}.${field_name}`\n        \n        // watch for remote object in the cache \n        modelDescription.relations[field_name].disposers.push(\n            observe(remoteModelDescriptor.cache.store, (remote_change: any) => {\n                let remote_obj\n                switch (remote_change.type) {\n                    case 'add':\n                        remote_obj = remote_change.newValue\n                        remote_obj.disposers.set(disposer_name , reaction(\n                            () => {\n                                return modelDescription.cache.get(remote_obj[remote_foreign_id])\n                            },\n                            action(disposer_name, (_new, _old) => {\n                                if (_old) {\n                                    const i = _old[field_name].indexOf(remote_obj)\n                                    if (i > -1)\n                                        _old[field_name].splice(i, 1)\n                                }\n                                if (_new) {\n                                    const i = _new[field_name].indexOf(remote_obj)\n                                    if (i === -1)\n                                        _new[field_name].push(remote_obj)\n                                } \n                            }),\n                            {fireImmediately: true}\n                        ))\n                        break\n                    case 'delete':\n                        remote_obj = remote_change.oldValue\n                        if (remote_obj.disposers.get(disposer_name)) {\n                            remote_obj.disposers.get(disposer_name)()\n                            remote_obj.disposers.delete(disposer_name)\n                        }\n                        let obj = modelDescription.cache.get(remote_obj[remote_foreign_id])\n                        if (obj) {\n                            const i = obj[field_name].indexOf(remote_obj)\n                            if (i > -1)\n                                runInAction(() => { obj[field_name].splice(i, 1) })\n                        } \n                        break\n                }\n            })\n        )\n    }\n}\n","import { extendObservable, intercept, observe } from 'mobx'\nimport { ID, TypeDescriptor, NumberDescriptor  } from '../types'\nimport { Model, ModelDescriptor, models } from '../model'\n\n\n/**\n * Decorator for id field\n * Only id field can register model in models map,\n * because it invoke before a model decorator.\n */\nexport function id<M extends Model>(typeDescriptor?: TypeDescriptor<ID>, observable: boolean = true) {\n    return (cls: any, fieldName: string) => {\n        const modelName = cls.modelName ?? cls.constructor.name\n        let modelDescription = models.get(modelName)\n        // id field is first decorator that invoke before model and other fields decorators\n        // so we need to check if model is already registered and if not then register it\n        if (!modelDescription) {\n            modelDescription = new ModelDescriptor()\n            models.set(modelName, modelDescription)\n        }\n\n        if (modelDescription.id)\n            throw new Error(`Id field already registered in model \"${modelName}\"`)\n    \n        const type = typeDescriptor ? typeDescriptor : new NumberDescriptor()\n\n        modelDescription.id = fieldName\n        modelDescription.idFieldDescriptors = {\n            decorator: (obj: M) => {\n                if (observable) extendObservable(obj, { [fieldName]: obj[fieldName] })\n                obj.disposers.set('before changes',\n                    intercept(obj as any, fieldName, (change) => {\n                        let oldValue = obj[fieldName]\n                        if (change.newValue !== undefined && oldValue !== undefined)\n                            throw new Error(`You cannot change id field: ${oldValue} to ${change.newValue}`)\n                        if (change.newValue === undefined && oldValue !== undefined)\n                            modelDescription.cache.eject(obj)\n                        return change\n                    })\n                )\n                obj.disposers.set('after changes',\n                    observe(obj as any, fieldName, (change) => {\n                        if (obj.ID !== undefined)\n                            modelDescription.cache.inject(obj)\n                    })\n                )\n            },\n            disposers: [],\n            type,\n            settings: {}\n        } \n    }\n}\n","export abstract class Filter {\n    abstract get URLSearchParams()  : URLSearchParams\n    abstract     isMatch(obj: any)  : boolean\n    abstract get isReady()          : boolean\n}\n","import { makeObservable, observable } from 'mobx'\nimport { Filter } from './Filter'\nimport { Input } from '../inputs/Input'\n\n\nexport class SingleFilter extends Filter {\n    readonly    field       : string\n    @observable input       : Input<any> \n    // TODO: is __disposers deprecated? I don't find any usage of it and I don't how it can be used\n    __disposers             : (()=>void)[] = []\n\n    readonly getURIField : (field: string) => string \n    readonly operator    : (value_a, value_b) => boolean \n\n    constructor(\n        field: string,\n        input: Input<any>,\n        getURIField: (field: string) => string,\n        operator: (a: any, b: any) => boolean,\n    ) {\n        super()\n        this.field = field\n        this.input = input \n        this.getURIField = getURIField\n        this.operator = operator\n        makeObservable(this)\n    }\n\n    get isReady(): boolean {\n        return this.input.isReady\n    }\n\n    get URLSearchParams(): URLSearchParams {\n        let search_params = new URLSearchParams()\n        let value = this.input.toString()\n        !this.input.isDisabled && value !== undefined && search_params.set(this.getURIField(this.field), value)\n        return search_params\n    }\n\n    isMatch(obj: any): boolean {\n        // it's always match if value of filter is undefined\n        if (this.input === undefined || this.input.isDisabled)\n            return true\n\n        return match(obj, this.field, this.input.value, this.operator)\n    }\n}\n\n\nfunction match(obj: any, field_name: string, filter_value: any, operator: (value_a, value_b) => boolean): boolean {\n    let field_names = field_name.split('__')\n    let current_field_name = field_names[0]\n    let current_value = obj[current_field_name]\n\n         if (field_names.length === 1) return operator(current_value, filter_value)\n    else if (field_names.length   > 1) {\n        let next_field_name = field_name.substring(field_names[0].length+2)\n        // we have object relation\n        if (typeof current_value === 'object' && current_value !== null) {\n            if (Array.isArray(current_value)) {\n                let result = false\n                for(const item of current_value) {\n                    result = match(item, next_field_name, filter_value, operator)\n                    if (result) return result\n                }\n            }\n            else {\n                return match(current_value, next_field_name, filter_value, operator)\n            }\n        }\n    }\n    return false\n}\n\nexport function EQ(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}`, (a: any, b: any) => a === b)\n}\nexport function EQV(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__eq`, (a: any, b: any) => a === b)\n}\nexport function NOT_EQ(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__not_eq`, (a: any, b: any) => a !== b)\n}\nexport function GT(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__gt`, (a: any, b: any) => a > b)\n}\nexport function GTE(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__gte`, (a: any, b: any) => a >= b)\n}\nexport function LT(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (feild: string) => `${field}__lt`, (a: any, b: any) => a < b)\n}\nexport function LTE(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__lte`, (a: any, b: any) => a <= b)\n}\nexport function LIKE(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__contains`, (a: any, b: any) => a.includes(b))\n}\nexport function ILIKE(field: string, input: Input<any>) : SingleFilter {\n    return new SingleFilter(field, input, (field: string) => `${field}__icontains`,\n        (a: any, b: any) => a.toLowerCase().includes(b.toLowerCase())\n    )\n}\nexport function IN(field: string, input: Input<any>) : SingleFilter { \n    return new SingleFilter(field, input, (field: string) => `${field}__in`,\n        (a, b) => {\n            // it's always match if value of filter is empty []\n            if (b.length === 0)\n                return true\n            for (let v of b) {\n                if (v === a)\n                    return true\n            }\n            return false\n        }\n    )\n}\n","import { Filter } from './Filter'\n\n\nexport abstract class ComboFilter extends Filter {\n    readonly filters: Filter[]\n\n    constructor(filters: Filter[]) {\n        super()\n        this.filters = filters\n    }\n\n    abstract isMatch(obj: any) : boolean\n\n    get isReady(): boolean {\n        for(let filter of this.filters) {\n            if (!filter.isReady) return false\n        }\n        return true\n    }\n\n    get URLSearchParams(): URLSearchParams {\n        let search_params = new URLSearchParams()\n        for(let filter of this.filters) {\n            filter.URLSearchParams.forEach((value, key) => search_params.set(key, value))\n        }\n        return search_params\n    }\n}\n\nexport class AND_Filter extends ComboFilter {\n\n    isMatch(obj: any) : boolean {\n        for(let filter of this.filters) {\n            if (!filter.isMatch(obj)) {\n                return false\n            }\n        }\n        return true \n    }\n}\n\nexport function AND(...filters: Filter[]) : Filter { return new AND_Filter(filters) }\n","import { Model } from '../model'\nimport { ID } from '../types'\nimport { Query } from '../queries'\nimport { Filter } from '../filters'\n\n\nexport type RequestConfig = {\n    controller?: AbortController\n    onUploadProgress?: (progressEvent: ProgressEvent) => void\n}\n\n/**\n * Adapter is a class that provides a way to interact with the server or other data source.\n */\nexport abstract class Adapter <M extends Model> {\n    abstract create (raw_data: any,                        config?: RequestConfig): Promise<any>\n    abstract update (id: ID, only_changed_raw_data: any,   config?: RequestConfig): Promise<any>\n    abstract delete (id: ID,                               config?: RequestConfig): Promise<void>\n    abstract action (id: ID, name: string, kwargs: Object, config?: RequestConfig): Promise<any>\n    abstract get    (id: ID,                               config?: RequestConfig): Promise<any>\n\n    // the find returns first object that match the query or undefined\n    abstract find(query: Query<M>, config?: RequestConfig): Promise<any>\n    abstract load(query: Query<M>, config?: RequestConfig): Promise<any[]>\n\n    abstract getTotalCount  (filter: Filter,                config?: RequestConfig): Promise<number>\n    abstract getDistinct    (filter: Filter, field: string, config?: RequestConfig): Promise<any[]>\n\n    abstract getURLSearchParams(query: Query<M>): URLSearchParams\n\n    delay: number  // delays for simulate real usage, use it only for tests\n}\n","import { Model } from '../model'\nimport { Adapter } from './adapter'\n\n/**\n * ReadOnlyAdapter not allow to create, update or delete objects. \n */\nexport abstract class ReadOnlyAdapter<M extends Model> extends Adapter<M> {\n    async create() { throw(`You cannot create using READ ONLY adapter.`) }\n    async update() { throw(`You cannot update using READ ONLY adapter.`) }\n    async delete() { throw(`You cannot delete using READ ONLY adapter.`) }\n}\n","import { Model } from '../model'\nimport { Query } from '../queries/query'\nimport { Filter } from '../filters/Filter'\nimport { Adapter, RequestConfig } from './adapter'\nimport { timeout } from '../utils'\nimport { ASC, ID } from '../types'\n\n\n/**\n * Local storage. \n */\nexport let local_store: Record<string, Record<string, any>> = {}\n\n/**\n * LocalAdapter connects to the local storage.\n * You can use this adapter for mock data or for unit test\n */\nexport class LocalAdapter<M extends Model> extends Adapter<M> {\n\n    readonly store_name  : string\n\n    clear() {\n        local_store[this.store_name] = {}\n    }\n\n    init_local_data(data: any[]) {\n        let objs = {} \n        for(let obj of data) {\n            objs[obj.id] = obj\n        }\n        local_store[this.store_name] = objs\n    }\n\n    constructor(store_name: string) {\n        super()\n        this.store_name = store_name\n        local_store[this.store_name] = {}\n    }\n\n    async create(raw_data: any) : Promise<any> {\n        if (this.delay) await timeout(this.delay) \n\n        // calculate and set new ID\n        let ids = [0]\n        for(let id of Object.keys(local_store[this.store_name])) {\n            ids.push(parseInt(id))\n        }\n        let max = Math.max.apply(null, ids)\n        raw_data.id = max + 1\n        local_store[this.store_name][raw_data.id] = raw_data\n        return raw_data\n    }\n\n    async update (id: ID, only_changed_raw_data: any): Promise<any> {\n        if (this.delay) await timeout(this.delay) \n        let raw_obj = local_store[this.store_name][id] \n        for(let field of Object.keys(only_changed_raw_data)) {\n            raw_obj[field] = only_changed_raw_data[field]\n        }\n        return raw_obj \n    }\n\n    async delete (id: ID): Promise<void> {\n        if (this.delay) await timeout(this.delay) \n        delete local_store[this.store_name][id]\n    }\n\n    async action (id: ID, name: string, kwargs: Object) : Promise<any> {\n        throw(`Not implemented`)\n    }\n\n    async get(id: ID, config?: RequestConfig) : Promise<any> {\n        if (this.delay) await timeout(this.delay) \n        return local_store[this.store_name][id]\n    }\n\n    async find(query: Query<M>) : Promise<any> {\n        if (this.delay) await timeout(this.delay) \n        let raw_obj = Object.values(local_store[this.store_name])[0]\n        return raw_obj\n    }\n\n    async load (query: Query<M>) : Promise<any[]> {\n        if (this.delay) await timeout(this.delay) \n        let raw_objs = []\n\n        if (query.filter) {\n            for(let raw_obj of Object.values(local_store[this.store_name])) {\n                if (query.filter.isMatch(raw_obj)) {\n                    raw_objs.push(raw_obj)\n                }\n            }\n        }\n        else {\n            raw_objs = Object.values(local_store[this.store_name])\n        }\n\n        // order_by (sort)\n        if (query.orderBy.value) {\n            raw_objs = raw_objs.sort((obj_a, obj_b) => {\n                for(let sort_by_field of query.orderBy.value) {\n                    if (sort_by_field[1] === ASC) {\n                        if (obj_a[sort_by_field[0]] < obj_b[sort_by_field[0]]) return -1\n                        if (obj_a[sort_by_field[0]] > obj_b[sort_by_field[0]]) return 1\n                    }\n                    else {\n                        if (obj_a[sort_by_field[0]] > obj_b[sort_by_field[0]]) return -1\n                        if (obj_a[sort_by_field[0]] < obj_b[sort_by_field[0]]) return 1\n                    }\n                }\n                return 0\n            })\n        }\n\n        // page\n        if (query.limit.value !== undefined && query.offset.value !== undefined) {\n            raw_objs = raw_objs.slice(query.offset.value, query.offset.value+query.limit.value)\n        }\n        return raw_objs \n    }\n\n    async getTotalCount(filter: Filter): Promise<number> {\n        return Object.values(local_store[this.store_name]).length\n    }\n\n    async getDistinct(filter, filed): Promise<any[]> {\n        return []\n    }\n\n    getURLSearchParams(query: Query<M>): URLSearchParams {\n        return new URLSearchParams()\n    }\n}\n\n\n// model decorator\nexport function local(store_name?: string) {\n    return (cls: any) => {\n        cls.defaultRepository.adapter = new LocalAdapter(store_name ? store_name : cls.modelName)\n    }\n}\n","import { Model } from '../model'\nimport { Adapter } from './adapter'\n\n\nexport class ConstantAdapter<M extends Model> extends Adapter<M> {\n    readonly constant: any[] \n\n    constructor (constant) {\n        super()\n        this.constant = constant\n    }\n\n    async action (): Promise<any> {\n        console.warn('ConstantAdapter.action not implemented')\n        return {} \n    }\n\n    async create (): Promise<any> {\n        throw new Error('ConstantAdapter.create should not be used.')\n    }\n\n    async update (): Promise<any> {\n        throw new Error('ConstantAdapter.update should not be used.')\n    }\n\n    async delete (): Promise<void> {\n        throw new Error('ConstantAdapter.delete should not be used.')\n    }\n\n    async get (): Promise<any> {\n        throw new Error('ConstantAdapter.get should not be used.')\n    }\n\n    async find (): Promise<any> {\n        throw new Error('ConstantAdapter.find should not be used.')\n    }\n\n    async load (): Promise<any[]> {\n        return this.constant \n    }\n\n    async getTotalCount (): Promise<number> {\n        return this.constant.length\n    }\n\n    async getDistinct (): Promise<any[]> {\n        throw new Error('ConstantAdapter.getDistinct should not be used.')\n    }\n\n    getURLSearchParams(): URLSearchParams {\n        return new URLSearchParams()\n    }\n}\n\n// model decorator\nexport function constant (constant: any[]) {\n    return (cls: any) => {\n        cls.defaultRepository.adapter = new ConstantAdapter(constant)\n    }\n}\n","import { makeObservable, observable, runInAction } from 'mobx'\nimport { Input } from '../inputs/Input'\nimport { config } from '../config'\nimport { Destroyable } from '../object'\n\n/**\n * Form class\n */\nexport class Form implements Destroyable {\n    @observable isLoading   : boolean = false\n    @observable errors      : string[] = []\n\n    constructor(\n        readonly inputs   : { [key: string]: Input<any> },\n        private __submit  : () => Promise<void>,\n        private __cancel ?: () => void\n    ) {\n        makeObservable(this)\n    }\n\n    destroy() {\n        for (const key in this.inputs) {\n            this.inputs[key].destroy()\n        }\n    }\n\n    get isReady(): boolean {\n        return Object.values(this.inputs).every(input => input.isReady)\n    }\n\n    get isError(): boolean {\n        return this.errors.length > 0\n            || Object.values(this.inputs).some(input => input.errors.length > 0)\n    }\n\n    async submit() {\n        if (!this.isReady) return  // just ignore\n\n        runInAction(() => {\n            this.isLoading = true\n            this.errors = []\n        })\n\n        try {\n            await this.__submit()\n        }\n        catch (err) {\n            runInAction(() => {\n                for (const key in err.message) {\n                    if (key === config.FORM_NON_FIELD_ERRORS_KEY) {\n                        this.errors = err.message[key]\n                    } else {\n                        if (this.inputs[key])\n                            this.inputs[key].errors = err.message[key]\n                        else {\n                            // unknown error should be logged \n                            // and not shown to user\n                            this.errors = [config.FORM_UNKNOWN_ERROR_MESSAGE]\n                            console.error(err)\n                        }\n                    }\n                }\n            })\n        }\n        finally {\n            runInAction(() => {\n                this.isLoading = false\n            })\n        }\n    }\n\n    cancel() {\n        this.__cancel && this.__cancel()\n    }\n}\n","import { Model } from '../model'\nimport { Input } from '../inputs/Input' \nimport { Form } from './Form'\n\n\nexport class ObjectForm<M extends Model> extends Form {\n    constructor(\n        public  obj     : M,\n                inputs  : {[key: string]: Input<any> },\n                submit  : () => Promise<void>,\n                cancel ?: (response?) => void\n    ) {\n        super(inputs, submit, cancel)\n    }\n}\n","import { runInAction } from 'mobx'\nimport { Model } from '../model'\nimport { Input } from '../inputs/Input' \nimport { Repository } from '../repository'\nimport { ObjectForm } from './ObjectForm'\n\n/**\n * Form to save (create/update) an object.\n */\n\nexport class SaveObjectForm<M extends Model> extends ObjectForm<M> {\n    constructor(\n        obj     : M,\n        inputs  : {[key: string]: Input<any> },\n        onDone ?: (response?) => void,\n        repository ?: Repository<M>\n    ) {\n        super(\n            obj,\n            inputs,\n            async () => {\n                const fieldsNames = Object.keys(this.obj)\n                // check if all fields from inputs are in obj\n                for (let fieldName of Object.keys(this.inputs))\n                    if (!fieldsNames.includes(fieldName))\n                        throw new Error(`ObjectForm error: object has no field ${fieldName}`)\n                // move all values from inputs to obj\n                const modelDescriptor = this.obj.modelDescriptor\n                runInAction(()=> {\n                    for (let fieldName of Object.keys(inputs)) {\n                        // correct fieldName if it is foreign obj to foreign id\n                        if (modelDescriptor.relations[fieldName]) {\n                            const idFieldName = modelDescriptor.relations[fieldName].settings.foreign_id\n                            this.obj[idFieldName] = inputs[fieldName].value\n                        }\n                        else \n                            this.obj[fieldName] = inputs[fieldName].value\n                    }\n                })\n\n                const response = await (repository || this.obj.getDefaultRepository()).save(this.obj)\n                onDone && onDone(response)\n            },\n            onDone\n        )\n    }\n}\n","import { Model } from '../model'\nimport { Input } from '../inputs/Input' \nimport { ObjectForm } from './ObjectForm'\nimport { Repository } from '..'\n\n/**\n * Form to make an action of object.\n */\nexport class ActionObjectForm<M extends Model> extends ObjectForm<M> {\n    constructor(\n        action: string,\n        obj     : M,\n        inputs  : {[key: string]: Input<any> },\n        onDone ?: (response?) => void,\n        repository ?: Repository<M>\n    ) {\n        super(\n            obj,\n            inputs,\n            async () => {\n                // move all values from inputs to kwargs of action\n                const kwargs: any = {}\n                for (let fieldName of Object.keys(inputs))\n                    kwargs[fieldName] = inputs[fieldName].value\n                const response = await (repository || this.obj.getDefaultRepository()).action(this.obj, action, kwargs)\n                onDone && onDone(response)\n            },\n            onDone\n        )\n    }\n}\n","import { Repository } from '..'\nimport { Model } from '../model'\nimport { ObjectForm } from './ObjectForm'\n\n/**\n * Form to delete an object.\n */\n\nexport class DeleteObjectForm<M extends Model> extends ObjectForm<M> {\n    constructor(\n        public  obj     : M,\n                onDone ?: (response?) => void,\n                repository ?: Repository<M>\n    ) {\n        super(\n            obj,\n            {},\n            async () => {\n                const response = await (repository || this.obj.getDefaultRepository()).delete(this.obj)\n                onDone && onDone(response)\n            },\n            onDone\n        )\n    }\n}\n"],"names":["_","makeObservable","observable","action","autorun","reaction","runInAction","observe","computed","extendObservable","intercept"],"mappings":"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"}